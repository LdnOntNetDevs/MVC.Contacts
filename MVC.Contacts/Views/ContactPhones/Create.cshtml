@model ContactPhone

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(new { RedirectUrl = HttpContext.Current.Request.UrlReferrer.OriginalString }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contact Phone</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ContactId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (HttpContext.Current.Request.UrlReferrer.OriginalString.Contains("/Edit/"))
    {
        @Html.ActionLink("Back to List", "Edit", "Contacts", new { id = Request["ContactId"] }, null)
    }
    else
    {
        @Html.ActionLink("Back to List", "Details", "Contacts", new { id = Request["ContactId"] }, null)
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
